version: "3.8"
services:
  affine:
    image: ghcr.io/toeverything/affine-graphql:stable
    container_name: affine_selfhosted
    command:
      - sh
      - -c
      - node ./scripts/self-host-predeploy && node ./dist/index.js
      #ports: null
      #- '3010:3010'
      # - '5555:5555'
    expose:
      - "3010"
    depends_on:
      affine_redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      # custom configurations
      - /data/affine-app_config:/root/.affine/config
      - /data/affine-app_storage:/root/.affine/storage
    restart: unless-stopped
    environment:
      - NODE_OPTIONS="--import=./scripts/register.js"
      - AFFINE_CONFIG_PATH=/root/.affine/config
      - REDIS_SERVER_HOST=affine_redis
      - DATABASE_URL=postgres://affine:${AFFINE_A_PW}@postgres:5432/affine
      - NODE_ENV=production
      - AFFINE_ADMIN_EMAIL=$AFFINE_A_EMAIL
      - AFFINE_ADMIN_PASSWORD=$AFFINE_A_PW
      - AFFINE_SERVER_HOST=affine.phonkd.net
      - AFFINE_SERVER_HTTPS=true
      - MAILER_HOST=$MAILER_HOST
      - MAILER_PORT=587
      - MAILER_USER=$MAILER_USER
      - MAILER_PASSWORD=$MAILER_PASSWORD
    networks:
      - net-affine
    labels:
      - traefik.enable=true
      - traefik.http.routers.affine.rule=Host(`affine.phonkd.net`)
      - traefik.http.routers.affine.entryPoints=https
      - traefik.http.routers.affine.tls=true
      - traefik.http.routers.affine.tls.certresolver=cloudflare
      - traefik.http.services.affine.loadBalancer.server.port=3010
  affine_redis:
    networks:
      - net-affine
    image: redis
    container_name: affine_redis
    restart: unless-stopped
    volumes:
      - /data/affine-redis:/data
    healthcheck:
      test:
        - CMD
        - redis-cli
        - --raw
        - incr
        - ping
      interval: 10s
      timeout: 5s
      retries: 5
  postgres:
    networks:
      - net-affine
    image: postgres
    container_name: affine_postgres
    restart: unless-stopped
    volumes:
      - /data/affine-postgres:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U affine
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=$AFFINE_PG_USER
      - POSTGRES_PASSWORD=$AFFINE_PG_PW
      - POSTGRES_DB=affine
      - PGDATA=/var/lib/postgresql/data/pgdata
networks:
  net-affine:
    name: net-affine
